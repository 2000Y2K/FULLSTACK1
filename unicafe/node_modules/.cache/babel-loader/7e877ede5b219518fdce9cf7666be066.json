{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Desktop/Uan/FULLSTACKOPEN/part1/unicafe/uni/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, props.text);\n\nconst Display = props => {\n  if (props.all > 0) {\n    var avg = (props.good - props.bad) / props.all;\n  } else {\n    var avg = 0;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, \"good \", props.good), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, \"bad \", props.bad), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, \"neutral \", props.neutral), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, \"all \", props.all), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, \"average \", avg));\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setAll(all + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n    setAll(all + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setAll(all + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleGood,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleBad,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleNeutral,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"statistics\"), /*#__PURE__*/React.createElement(Display, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    all: all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/julian/Desktop/Uan/FULLSTACKOPEN/part1/unicafe/uni/src/index.js"],"names":["React","useState","ReactDOM","Button","props","handleClick","text","Display","all","avg","good","bad","neutral","App","setGood","setNeutral","setBad","setAll","handleGood","handleBad","handleNeutral","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\n\nconst Display = (props) =>{ \n  if (props.all > 0) {\n    var avg = (props.good - props.bad) / props.all}\n  else {\n    var avg = 0\n  }\n  return (\n  <>\n  <h4>good {props.good}</h4>\n  <h4>bad {props.bad}</h4>\n  <h4>neutral {props.neutral}</h4>\n  <h4>all {props.all}</h4>\n  <h4>average {avg}</h4>\n  </>\n)\n  }\n  \n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all , setAll] = useState(0)\n\n  const handleGood = () => {\n    setGood(good + 1)\n    setAll(all + 1)\n  }\n\n  const handleBad = () => {\n    setBad(bad + 1)\n    setAll(all + 1)\n  }\n  \n  const handleNeutral = () => {\n    setNeutral(neutral + 1)\n    setAll(all + 1)\n  }\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <div>\n        <Button handleClick={handleGood} text=\"good\"></Button>\n        <Button handleClick={handleBad} text=\"bad\"></Button>\n        <Button handleClick={handleNeutral} text=\"neutral\"></Button>\n      </div>\n      <h1>statistics</h1>\n      <Display good={good} bad={bad} neutral={neutral} all={all}></Display>\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}