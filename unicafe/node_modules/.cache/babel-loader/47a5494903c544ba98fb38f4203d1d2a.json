{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Desktop/Uan/FULLSTACKOPEN/part1/unicafe/uni/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, props.text);\n\nconst Statistic = props => /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, props.text, \" \", props.value);\n\nconst Statistics = props => {\n  if (props.all > 0) {\n    var avg = (props.good - props.bad) / props.all;\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, \"No feedback given\"));\n  }\n\n  if (props.good > 0) {\n    var pos = 1 / (props.all / props.good) * 100;\n  } else {\n    var pos = 0;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Statistic, {\n    text: \"good\",\n    value: props.good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"neutral\",\n    value: props.neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"bad\",\n    value: props.bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Statistic, {\n    text: \"all\",\n    value: props.all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, \"average \", avg), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, \"positive \", pos, \" %\"));\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n\n  const handleGood = () => {\n    setGood(good + 1);\n    setAll(all + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n    setAll(all + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n    setAll(all + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleGood,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleNeutral,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleBad,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"statistics\"), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    all: all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/julian/Desktop/Uan/FULLSTACKOPEN/part1/unicafe/uni/src/index.js"],"names":["React","useState","ReactDOM","Button","props","handleClick","text","Statistic","value","Statistics","all","avg","good","bad","pos","neutral","App","setGood","setNeutral","setBad","setAll","handleGood","handleBad","handleNeutral","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\nconst Statistic = (props) => (\n  <h4>\n    {props.text} {props.value}\n  </h4>\n)\n\n\nconst Statistics = (props) =>{ \n  if (props.all > 0) {\n    var avg = (props.good - props.bad) / props.all}\n  else {\n  return (\n    <>\n    <h4>No feedback given</h4>\n    </>\n  )\n  }\n  if (props.good > 0) {\n    var pos = 1 /(props.all / props.good)*100}\n  else {\n    var pos = 0\n  }\n  return (\n  <>\n  <Statistic text=\"good\" value={props.good}></Statistic>\n  <Statistic text=\"neutral\" value={props.neutral}></Statistic>\n  <Statistic text=\"bad\" value={props.bad}></Statistic>\n  <Statistic text=\"all\" value={props.all}></Statistic>\n  <h4>average {avg}</h4>\n  <h4>positive {pos} %</h4>\n  </>\n)\n  }\n  \n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all , setAll] = useState(0)\n\n  const handleGood = () => {\n    setGood(good + 1)\n    setAll(all + 1)\n  }\n\n  const handleBad = () => {\n    setBad(bad + 1)\n    setAll(all + 1)\n  }\n  \n  const handleNeutral = () => {\n    setNeutral(neutral + 1)\n    setAll(all + 1)\n  }\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <div>\n        <Button handleClick={handleGood} text=\"good\"></Button>\n        <Button handleClick={handleNeutral} text=\"neutral\"></Button>\n        <Button handleClick={handleBad} text=\"bad\"></Button>\n      </div>\n      <h1>statistics</h1>\n      <Statistics good={good} bad={bad} neutral={neutral} all={all}></Statistics>\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}